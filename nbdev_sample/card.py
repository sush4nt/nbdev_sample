# AUTOGENERATED! DO NOT EDIT! File to edit: ../nbs/00_card.ipynb.

# %% auto 0
__all__ = ['suits', 'ranks', 'Card']

# %% ../nbs/00_card.ipynb 3
from fastcore.test import *
from fastcore.utils import *

# %% ../nbs/00_card.ipynb 4
suits = ['C', 'D', 'H', 'S']
ranks = [None, 'A'] + [str(x) for x in range(2,11)] + ['J', 'Q', 'K']

# %% ../nbs/00_card.ipynb 9
class Card():
    """ 
        A playing card created by passing in `rank` from `ranks` 
        and `suit` from `suits`.
    """
    def __init__(self, 
                 suit:int,   # An index into `suits`
                 rank:int):  # An index into `ranks`
        self.suit = suit
        self.rank = rank
    def __str__(self):
        return f"Card is {ranks[self.rank]} of {suits[self.suit]}"
    __repr__ = __str__
    def __eq__(self, other:'Card'):
        return (self.suit, self.rank) == (other.suit, other.rank)

# %% ../nbs/00_card.ipynb 23
# @patch
# def __eq__(self:Card, other:Card):
#         return (self.suit, self.rank) == (other.suit, other.rank)

# %% ../nbs/00_card.ipynb 24
@patch
def __lt__(self:Card, other:Card):
        return (self.suit, self.rank) < (other.suit, other.rank)

# %% ../nbs/00_card.ipynb 25
@patch
def __gt__(self:Card, other:Card):
        return (self.suit, self.rank) > (other.suit, other.rank)
